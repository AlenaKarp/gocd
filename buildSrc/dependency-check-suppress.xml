<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2021 ThoughtWorks, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
    <suppress>
        <notes><![CDATA[
   Suppressing false positive as GoCD internal mysql support JAR is not the same thing as MySQL and MySQL server.
   ]]></notes>
        <cpe>cpe:/a:mysql:mysql</cpe>
        <cpe>cpe:/a:mysql:mysql_server</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
   Suppressing false positive caused by OWASP Dependency Check thinking the shaded/packaged dirgra library is the same
   as the JRuby version. These are versioned independently and not the same thing.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.jruby/dirgra@.*$</packageUrl>
        <cpe>cpe:/a:jruby:jruby</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
   Suppressing false positive caused by OWASP Dependency Check thinking shaded RubyGems are the same thing as
   as JRuby or their related libraries independently. These are not the same things.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/rubygems/jruby\-(openssl|readline)@.*$</packageUrl>
        <cpe>cpe:/a:jruby:jruby</cpe>
        <cpe>cpe:/a:openssl:openssl</cpe>
        <cpe>cpe:/a:openssl_project:openssl</cpe>
        <cpe>cpe:/a:rubygems:rubygems</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
   Suppressing false positive caused by OWASP Dependency Check thinking jruby-rack is the same thing as
   as JRuby independently. These are not the same things.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.jruby\.rack/jruby\-rack@.*$</packageUrl>
        <vulnerabilityName>CVE-2010-1330</vulnerabilityName>
        <vulnerabilityName>CVE-2011-4838</vulnerabilityName>
    </suppress>

    <suppress>
        <notes><![CDATA[
   This one only affects Spring Framework 5.0.5 when combined with Spring Security so is a false positive.
   https://nvd.nist.gov/vuln/detail/CVE-2018-1258 OWASP Dependency Check codes not currently understanding "A and B"
   CPE constraints. See https://github.com/jeremylong/DependencyCheck/issues/1827
   ]]></notes>
        <gav regex="true">^org\.springframework\.security:spring-security-.*:4\..*$</gav>
        <cve>CVE-2018-1258</cve>
    </suppress>

    <suppress>
        <notes><![CDATA[
   file name: jruby-complete-9.2.0.0.jar/META-INF/jruby.home/lib/ruby/stdlib/rdoc/generator/template/darkfish/js/jquery.js
   this is a file used by rdoc used in the final generated rdoc, which we do not use in dev or prod
   ]]></notes>
        <!-- this is the sha1 of the jquery.js file, not of jruby jar -->
        <sha1>71cce71820cc47b3bd1098618d248325fcf24ddb</sha1>
        <cve>CVE-2015-9251</cve>
        <cve>CVE-2012-6708</cve>
        <cve>CVE-2019-11358</cve>
        <cve>CVE-2020-11022</cve>
        <cve>CVE-2020-11023</cve>
    </suppress>

    <suppress>
        <notes><![CDATA[
   https://nvd.nist.gov/vuln/detail/CVE-2020-13697 as described only affects usage of "Nanolets" which is packaged
   separately and which is not used within GoCD.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.nanohttpd/nanohttpd@.*$</packageUrl>
        <cve>CVE-2020-13697</cve>
    </suppress>

    <suppress>
        <notes><![CDATA[
   file name: hibernate-commons-annotations-3.2.0.Final.jar
   Hibernate Commons Annotations is a different project, versioned separately to the core "Hibernate ORM", so CVEs against this are misleading
   and false positives. We will still seem them reported against other Hibernate dependencies, however.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.hibernate/hibernate\-commons\-annotations@.*$</packageUrl>
        <cpe>cpe:/a:hibernate:hibernate_orm</cpe>
    </suppress>

    <suppress>
        <notes><![CDATA[
   file name: velocity-1.7.jar
   It is not possible to upload/modify Velocity Templates within GoCD, so GoCD does not appear to be vulnerable to this
   vulnerability. See https://nvd.nist.gov/vuln/detail/CVE-2020-13936
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.apache\.velocity/velocity@.*$</packageUrl>
        <cve>CVE-2020-13936</cve>
    </suppress>

    <suppress>
        <notes><![CDATA[
   file name: velocity-tools-view-1.4.jar
   The Velocity Tools/Velocity Tools View are versioned separately to the Engine, so it is confusing to have Engine CVEs
   reported against the tools jar.
   ]]></notes>
        <!-- sha1 of jar as vendored in server/vendor at time of suppression -->
        <sha1>3c44030292cff7cf495ee155a5eefa7a05de6447</sha1>
        <cpe>cpe:/a:apache:velocity_engine</cpe>
    </suppress>

</suppressions>
